/************************************************************************/
/** Do NOT edit anything beyond this point (unless u know what you do) **/
/************************************************************************/

#ifndef SOILMANAGER_LIB_H
#define SOILMANAGER_LIB_H

extern int sensorData[NUM_SENSORS-1][3];
extern int sensorID[NUM_SENSORS-1][21];

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////  FUNCTIONS  ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//checks all sensors
void readSensorsAndUpdateMemory();

//Reads raw sensor data and generates an average over a defined number of meassurments
int avgRead(int x);

//Returns humidity as a percent value, based on a scale between the calibrated MIN/MAX of the sensor.
int getHumidity(int x);


///////////////////////////////////////////////////////////////////////////////
///////////////////////////////    SETUP    ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//initialize sensor data
void initDataArray();

//initialize Array Containing Names
void initIDArray();

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////   OUTPUT   ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//outputs last read sensor data via configured channels
void printStatus();

///////////////////////////////   SERIAL   ////////////////////////////////////

//send last read sensor data via serial port (serial-platter compatibel)
void serialStatus();

///////////////////////////////   DISPLAY   ///////////////////////////////////

//send last read sensor data via serial port (serial-platter compatibel)
void dispStatus();